<h1 class="subheading"><%= @event.title %></h1>
<h2 class="subheading">>> Roster for <%= @team.title %></h2>

<% if params[:order_by] %>
<h2 class="subheading alternate_row">>>>> Sorted by <%= params[:order_by].titleize %></h2>
<% end %>

<% if params[:fn] and params[:fv] %>
<h2 class="subheading">>>>> Filtered by <%= "#{params[:fn].titleize} (#{params[:fv]})" %></h2>
<% end %>

<% @asc = (@asc == 0) ? 1 : 0 %>

<%= paginate @roster %>
<%
  table = {}
  headings = []

  # Create sortable headings
  @headings.each do |heading|
    headings << {content: link_to(heading.underscore.humanize.titleize, roster_path(team_key: @team.key, event_key: @event.key, order_by: heading, asc: @asc, fn: params[:fn], fv: params[:fv]))}
  end

  table[:headings] = headings
  table[:class] = "default_data"
  rows = []

  @roster_rows.each do |r|
    row = []
    @headings.each do |heading|
      row << {content: (r[heading]) ? (link_to r[heading], roster_path(team_key: @team.key, event_key: @event.key, order_by: params[:order_by], asc: params[:asc], fn: heading, fv: r[heading])) : "--"}
    end
    rows << row
  end

  table[:rows] = rows
%>

<%= table_helper table %>

<%= link_to "Clear Filters", roster_path(team_key: @team.key, event_key: @event.key) %>
